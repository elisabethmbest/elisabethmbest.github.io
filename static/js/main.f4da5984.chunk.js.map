{"version":3,"sources":["Search.js","App.js","index.js"],"names":["Search","handleChange1","e","persist","setState","ingredientsInput","target","value","handleChange2","searchInput","handleSubmit","preventDefault","doCORSRequest","method","id","url","state","data","options","x","XMLHttpRequest","open","onload","onerror","JSON","parse","responseText","result","results","test","setRequestHeader","send","bind","mappedResults","this","map","recipe","i","key","class","title","href","ingredients","onSubmit","type","onChange","name","placeholder","Component","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"iQAgMeA,G,kBA/EX,aAAgB,IAAD,8BACX,+CASJC,cAAgB,SAAAC,GACZA,EAAEC,UACF,EAAKC,SAAS,CACVC,iBAAkBH,EAAEI,OAAOC,SAbpB,EAiBfC,cAAgB,SAAAN,GACZA,EAAEC,UACF,EAAKC,SAAS,CACVK,YAAaP,EAAEI,OAAOC,SApBf,EAwBfG,aAAe,SAAAR,GACXA,EAAES,iBACF,EAAKC,cAAc,CAChBC,OAAoB,SAAZ,EAAKC,GAAgB,OAAS,MACtCC,IAAI,qCAAD,OAAuC,EAAKC,MAAMX,iBAAlD,cAAwE,EAAKW,MAAMP,aACtFQ,KAAM,MA7BE,EAiCfL,cAAgB,SAACM,GACf,IACIC,EAAI,IAAIC,eACZD,EAAEE,KAAKH,EAAQL,OAFI,uCAEmBK,EAAQH,KAC9CI,EAAEG,OAASH,EAAEI,QAAU,WACrB,IAAMN,EAAOO,KAAKC,MAAMN,EAAEO,cAC1B,EAAKtB,SAAS,CAACuB,OAAQV,EAAKW,WAE1B,SAASC,KAAKX,EAAQL,SACxBM,EAAEW,iBAAiB,eAAgB,qCAErCX,EAAEY,KAAKb,EAAQD,OA1Cb,EAAKD,MAAQ,CACTX,iBAAkB,GAClBI,YAAa,GACbkB,OAAQ,IAEZ,EAAKf,cAAgB,EAAKA,cAAcoB,KAAnB,gBAPV,E,sEAiDX,IAAIC,EAAgBC,KAAKlB,MAAMW,OAAOQ,KAAK,SAACC,EAAQC,GAChD,OACI,yBAAKC,IAAKD,EAAGE,MAAM,UACf,yBAAKA,MAAM,QACP,4BAAKH,EAAOI,OACZ,uBAAGC,KAAML,EAAOK,MAAhB,kBACA,uBAAGF,MAAM,SAAT,mBAAkCH,EAAOI,MAAzC,KACA,uBAAGD,MAAM,eAAeH,EAAOM,kBAM/C,OACI,yBAAK5B,GAAG,WACJ,yBAAKA,GAAG,UACJ,0BAAM6B,SAAUT,KAAKxB,cACjB,2BAAOkC,KAAK,OAAOrC,MAAO2B,KAAKlB,MAAMP,YAAaoC,SAAUX,KAAK1B,cAAesC,KAAK,cAAchC,GAAI,UAAUiC,YAAY,WAC7H,2BAAOH,KAAK,OAAOrC,MAAO2B,KAAKlB,MAAMX,iBAAkBwC,SAAUX,KAAKjC,cAAe6C,KAAK,mBAAmBhC,GAAI,UAAUiC,YAAY,kCACvI,4BAAQjC,GAAG,SAAX,YAGR,yBAAKA,GAAG,cACHmB,Q,GAzEAe,cChDNC,E,iLA3BP,OACI,6BAmBI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWnD,S,GA/CzBgD,a,QCJlBI,IAASC,OACL,kBAAC,IAAD,KACA,kBAAC,EAAD,OAECC,SAASC,eAAe,W","file":"static/js/main.f4da5984.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './style.css'\n\n// class Search extends Component {\n//     constructor () {\n//         super()\n//         this.state = {\n//             ingredientsInput: \"\",\n//             searchInput: \"\",\n//             result: [],\n//         }\n//         this.doCORSRequest = this.doCORSRequest.bind(this)\n//     }\n\n\n//     handleChange1 = e => {\n//         e.persist()\n//         this.setState( {\n//             ingredientsInput: e.target.value\n\n//         })\n//         }\n//         handleChange2 = e => {\n//             e.persist()\n//             this.setState( {\n//                 searchInput: e.target.value\n    \n//             })\n//             }\n\n//     handleSubmit = e => {\n//         e.preventDefault()\n//         this.setState({\n//             result:  this.doCORSRequest({\n//            method: this.id === 'post' ? 'POST' : 'GET',\n//            url: `http://www.recipepuppy.com/api/?i=${this.state.ingredientsInput}&q=${this.state.searchInput}`,\n//            data: ''\n           \n//          })})\n//     }\n//      doCORSRequest = (options) => {\n//       var cors_api_url = 'https://cors-anywhere.herokuapp.com/';\n//       var x = new XMLHttpRequest();\n//       x.open(options.method, cors_api_url + options.url);\n//       x.onload = x.onerror = () => {\n//         //   ******* NEW CODE ******\n//           const data = JSON.parse(x.responseText)\n//           this.setState({result: data.results})\n//         //   *********************************\n       \n//         console.log(x.responseText)\n        \n//         return x.responseText\n//       };\n//       if (/^POST/i.test(options.method)) {\n//         x.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n//       }\n//       x.send(options.data);\n//     }\n  \n\n//     getRecipe = () => {\n//        this.setState({\n//            result:  this.doCORSRequest({\n//           method: this.id === 'post' ? 'POST' : 'GET',\n//           url: `http://www.recipepuppy.com/api/?i=${this.state.ingredientsInput}&q=${this.state.searchInput}`,\n//           data: ''\n          \n//         }\n        \n//         )\n//     })\n            \n//     }\n\n//     render() {\n        \n//         let mappedResults = this.state.result.map( (recipe, i) => {\n//             return (\n//                 <div key={i}>\n//                     <p>{recipe.results}</p>\n//                 </div>\n//             )\n//         }) \n\n//         return(\n\n//             <div id=\"wrapDiv\">\n                \n\n\n//                 <div id=\"myForm\">\n//                     <form onSubmit={this.handleSubmit}>\n//                         <input type=\"text\" value={this.state.ingredientsInput} onChange={this.handleChange1} name=\"ingredientsInput\" id =\"myInput\" placeholder=\"try oatmeal,raisins\"/>\n//                         <input type=\"text\" value={this.state.searchInput} onChange={this.handleChange2} name=\"searchInput\" id =\"myInput\" placeholder=\"try cookies\"/>\n//                         <button id=\"myBtn\">Search</button>\n//                     </form>\n//                 </div>\n                \n               \n\n//                 <div id=\"resultsDiv\">\n//                     {mappedResults} \n//                 </div>\n\n//             </div>\n//         )\n//     }\n// }\n\n// export default Search\n\nclass Search extends Component {\n    constructor () {\n        super()\n        this.state = {\n            ingredientsInput: \"\",\n            searchInput: \"\",\n            result: [],\n        }\n        this.doCORSRequest = this.doCORSRequest.bind(this)\n    }\n\n    handleChange1 = e => {\n        e.persist()\n        this.setState({\n            ingredientsInput: e.target.value\n        })\n    \n    }\n    handleChange2 = e => {\n        e.persist()\n        this.setState({\n            searchInput: e.target.value\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.doCORSRequest({\n           method: this.id === 'post' ? 'POST' : 'GET',\n           url: `http://www.recipepuppy.com/api/?i=${this.state.ingredientsInput}&q=${this.state.searchInput}`,\n           data: ''\n        })\n    }\n\n    doCORSRequest = (options) => {\n      var cors_api_url = 'https://cors-anywhere.herokuapp.com/';\n      var x = new XMLHttpRequest();\n      x.open(options.method, cors_api_url + options.url);\n      x.onload = x.onerror = () => {\n        const data = JSON.parse(x.responseText)\n        this.setState({result: data.results})\n      };\n      if (/^POST/i.test(options.method)) {\n        x.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n      }\n      x.send(options.data);\n    }\n  \n    \n    render() {\n        let mappedResults = this.state.result.map( (recipe, i) => {\n            return (\n                <div key={i} class=\"result\">\n                    <div class=\"card\">\n                        <h3>{recipe.title}</h3>\n                        <a href={recipe.href}>Link to recipe</a>\n                        <p class=\"intro\">Ingredients for {recipe.title}:</p>\n                        <p class=\"ingredients\">{recipe.ingredients}</p>\n                    </div>\n                </div>\n            )\n        }) \n\n        return(\n            <div id=\"wrapDiv\">\n                <div id=\"myForm\">\n                    <form onSubmit={this.handleSubmit}>\n                        <input type=\"text\" value={this.state.searchInput} onChange={this.handleChange2} name=\"searchInput\" id =\"myInput\" placeholder=\"recipe\"/>\n                        <input type=\"text\" value={this.state.ingredientsInput} onChange={this.handleChange1} name=\"ingredientsInput\" id =\"myInput\" placeholder=\"ingredients (comma separated)\"/>\n                        <button id=\"myBtn\">Search</button>\n                    </form>\n                </div>\n                <div id=\"resultsDiv\">\n                    {mappedResults} \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Search\n","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\n// import axios from 'axios'\n// import Navbar from './Navbar.js'\n// import Home from './Home.js'\nimport Search from './Search.js'\n// import MobileNav from \"./MobileNav\"\n// import { Link } from 'react-router-dom'\n\n\nclass App extends Component {\n\n    // **** first failed mobile nav ******\n    // constructor(){\n    //     super()\n    //     this.state = {\n    //         toggle: 'hide'\n    //     }\n    // }\n\n    // handleToggle = () => {\n    //     console.log(this.state.toggle)\n    //     if(this.state.toggle === 'show' ) {\n    //        this.setState({\n    //            toggle: 'hide'\n    //        }) \n    //     }\n    //     if(this.state.toggle === 'hide' ) {\n    //         this.setState({\n    //             toggle: 'show'\n    //         }) \n    //      }\n        \n    // }\n\n    // ****** end failed mobile nav *****\n    render() {\n        return (\n            <div>\n\n                {/* ******* mobile nav ******* */}\n                {/* <nav role=\"navigation\">\n            <div id=\"menuToggle\">\n            <input type=\"checkbox\" />\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                <ul id=\"menu\">\n                        <Link to=\"/\" className=\"link\">Home</Link>\n                        <Link to=\"/search\" className=\"link\">Search</Link>\n                </ul>\n            </div>\n                </nav> */}\n                {/* ******* end of mobile nav ******** */}\n                {/* <Navbar /> */}\n                {/* <Switch> */}\n                {/* <Route exact path='/' component={Home} /> */}\n                <Route path='/' component={Search} />\n                {/* </Switch> */}\n            </div>\n        )\n    }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport { BrowserRouter } from 'react-router-dom'\nimport \"./style.css\"\n\nReactDOM.render(\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n     document.getElementById('root'))"],"sourceRoot":""}